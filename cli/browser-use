#!/bin/bash

# Get the absolute path of the script's real location (dereference symbolic link)
REAL_SCRIPT_PATH=$(readlink -f "${BASH_SOURCE[0]}")

# Get the directory of the script
SCRIPT_DIR="$(dirname "$REAL_SCRIPT_PATH")"

# Project root is one level up from the script's directory
PROJECT_ROOT="$SCRIPT_DIR/.."

# Change to the project root directory
cd "$PROJECT_ROOT"

# Activate the virtual environment
if [ -f "venv/bin/activate" ]; then
    echo "Activating virtual environment"
    source "venv/bin/activate"
    echo "VIRTUAL_ENV: $VIRTUAL_ENV"
else
    echo "Virtual environment activation script not found"
fi

# Create a temporary file for state transfer
TEMP_STATE_FILE=$(mktemp)
echo "Created temporary state file: $TEMP_STATE_FILE"

# Run the Python script and capture its output
echo "Running: venv/bin/python cli/browser_use_cli.py '$@'"
if ! "venv/bin/python" "cli/browser_use_cli.py" "$@" --temp-file "$TEMP_STATE_FILE"; then
    echo "Error running command. Exiting."
    echo "Cleaning up temp file: $TEMP_STATE_FILE"
    rm -f "$TEMP_STATE_FILE"
    exit 1
fi

# Check the exit code of the Python script
PYTHON_EXIT_CODE=$?

# If Python script exited with a non-zero code, exit with the same code
if [ $PYTHON_EXIT_CODE -ne 0 ]; then
    echo "Python script exited with error code: $PYTHON_EXIT_CODE"
    echo "Cleaning up temp file: $TEMP_STATE_FILE"
    rm -f "$TEMP_STATE_FILE"
    exit $PYTHON_EXIT_CODE
fi

# Read the BROWSER_USE_RUNNING value from the temporary file
if [ -f "$TEMP_STATE_FILE" ]; then
    BROWSER_USE_RUNNING=$(cat "$TEMP_STATE_FILE")
    echo "Read BROWSER_USE_RUNNING from file: $BROWSER_USE_RUNNING"
    echo "Cleaning up temp file: $TEMP_STATE_FILE"
    rm -f "$TEMP_STATE_FILE"
else
    BROWSER_USE_RUNNING="false"
    echo "Warning: Temp file not found at: $TEMP_STATE_FILE"
    echo "Defaulting BROWSER_USE_RUNNING to: false"
fi

# Set the environment variable in the shell script based on captured value
export BROWSER_USE_RUNNING
echo "Environment variable BROWSER_USE_RUNNING set to: $BROWSER_USE_RUNNING"

# Check if the BROWSER_USE_RUNNING environment variable is set to true
echo "BROWSER_USE_RUNNING: $BROWSER_USE_RUNNING"
if [ "$BROWSER_USE_RUNNING" = "true" ]; then
    echo "Keeping virtual environment active for persistent session."
else
    # Deactivate the virtual environment only if not running persistently
    if [ -n "$VIRTUAL_ENV" ]; then
        echo "Deactivating virtual environment"
        deactivate
    else
        echo "Virtual environment was not active."
    fi
fi